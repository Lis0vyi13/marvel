{"version":3,"file":"static/js/910.8a0a5994.chunk.js","mappings":"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","sources":["components/charList/listLoader/ListLoader.js","components/comicsHeader/ComicsHeader.js","components/ComicsListItem/ComicsListItem.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","services/Marvel.js"],"sourcesContent":["import './listLoader.scss';\r\n\r\nconst ListLoader = () => {\r\n  return (\r\n    <div className='loadingio-spinner-ellipsis-6iszfz84awk list-loader'>\r\n      <div className='ldio-xlbd2dzlxer'>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListLoader;\r\n","import './comicsHeader.scss';\r\n\r\nimport hulk from '../../assets/images/comics-hulk.png';\r\nimport marvelSquad from '../../assets/images/marvel-squad.png';\r\n\r\nconst ComicsHeader = () => {\r\n  return (\r\n    <>\r\n      <img\r\n        style={{\r\n          height: 130,\r\n        }}\r\n        src={hulk}\r\n        alt='hulk'\r\n      />\r\n      <img src={marvelSquad} alt='marvel squad' />\r\n      <h2 className='comics-header__title'>\r\n        New comics every week! Stay tuned!\r\n      </h2>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsHeader;\r\n","import './comicsListItem.scss';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ComicsListItem = ({ id, thumbnail, title, price }) => {\r\n  return (\r\n    <Link to={`./${id}`}>\r\n      <div className='comics-item'>\r\n        <img className='comic-img' src={thumbnail} alt='sef' />\r\n        <h2 className='comic-title'>{title}</h2>\r\n        <h4 className='comic-price'>{price}</h4>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ComicsListItem;\r\n","import './comicsList.scss';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport { motion } from 'framer-motion';\r\n\r\nimport ComicsListItem from '../ComicsListItem/ComicsListItem';\r\nimport Marvel from '../../services/Marvel';\r\nimport ListLoader from '../charList/listLoader/ListLoader';\r\n\r\nimport { comicsHeaderAnim } from '../../animations/anim';\r\nimport Loader from '../loader/Loader';\r\n\r\nconst marvel = new Marvel();\r\n\r\nconst ComicsList = () => {\r\n  const [comics, setComics] = useState([]);\r\n  const [comicsList, setComicsList] = useState([]);\r\n  const [offset, setOffset] = useState(2);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const data = await marvel.getComics(offset);\r\n      setComics((oldData) => [...oldData, ...data]);\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [offset]);\r\n\r\n  useEffect(() => {\r\n    const comicsList = getComicsList();\r\n    setComicsList(comicsList);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [comics]);\r\n\r\n  useEffect(() => {\r\n    let timeoutId;\r\n    const handleScroll = () => {\r\n      clearTimeout(timeoutId);\r\n      timeoutId = setTimeout(() => {\r\n        if (\r\n          window.innerHeight + document.documentElement.scrollTop >=\r\n          document.documentElement.offsetHeight - 50\r\n        ) {\r\n          setOffset((offset) => offset + 20);\r\n        }\r\n      }, 20);\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const getComicsList = () => {\r\n    return comics.map((item, i) => {\r\n      const props = marvel._transformComics(item);\r\n      return <ComicsListItem key={i} {...props} />;\r\n    });\r\n  };\r\n\r\n  const content =\r\n    comics.length > 0 ? (\r\n      <motion.section\r\n        initial='hidden'\r\n        whileInView='visible'\r\n        viewport={{ once: true }}\r\n        custom={0.5}\r\n        variants={comicsHeaderAnim}\r\n        className='comics-list__content'\r\n      >\r\n        {comicsList}\r\n        <ListLoader />\r\n      </motion.section>\r\n    ) : (\r\n      <p>No comics found.</p>\r\n    );\r\n\r\n  return (\r\n    <motion.div\r\n      initial='hidden'\r\n      whileInView='visible'\r\n      viewport={{ once: true }}\r\n      custom={2}\r\n      variants={comicsHeaderAnim}\r\n      className='comics-list'\r\n    >\r\n      {isLoading ? <Loader /> : content}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default ComicsList;\r\n","import { motion } from 'framer-motion';\r\nimport { Helmet } from 'react-helmet';\r\nimport ComicsHeader from '../comicsHeader/ComicsHeader';\r\nimport ComicsList from '../comicsList/ComicsList';\r\n\r\nimport { comicsHeaderAnim } from '../../animations/anim';\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Comics</title>\r\n        <meta name='description' content='Comics Page' />\r\n      </Helmet>\r\n      <section className='comics'>\r\n        <div className='container comics-container'>\r\n          <motion.header\r\n            initial='hidden'\r\n            whileInView='visible'\r\n            viewport={{ once: true }}\r\n            variants={comicsHeaderAnim}\r\n            custom={2}\r\n            className='comics-header'\r\n          >\r\n            <ComicsHeader />\r\n          </motion.header>\r\n          <main\r\n            style={{ display: 'flex', flexDirection: 'column' }}\r\n            className='comics-main'\r\n          >\r\n            <ComicsList />\r\n          </main>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n","class Marvel {\r\n  key = '333d74a765f835dd4bccc16126e65eaa';\r\n  _baseOffset = 1253;\r\n\r\n  getAllCharacters = async (offset) => {\r\n    const response = await fetch(\r\n      `https://gateway.marvel.com:443/v1/public/characters?limit=9&offset=${offset}&apikey=${this.key}`,\r\n    );\r\n    if (!response.ok) console.error('Fetch error');\r\n\r\n    return await response.json();\r\n  };\r\n\r\n  getCharactersList = async (offset) => {\r\n    const response = await this.getAllCharacters(offset);\r\n    const chars = response.data.results;\r\n\r\n    return chars.map(this._transformCharacter);\r\n  };\r\n\r\n  getCharacter = async (id) => {\r\n    const response = await fetch(\r\n      `https://gateway.marvel.com:443/v1/public/characters/${id}?apikey=${this.key}`,\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch character');\r\n    }\r\n    return await response.json();\r\n  };\r\n  getCharInfoByName = async (name) => {\r\n    const response = await fetch(\r\n      `https://gateway.marvel.com:443/v1/public/characters?name=${name}&apikey=${this.key}`,\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch character');\r\n    }\r\n    const char = await response.json();\r\n    if (char.data.results.length === 0)\r\n      throw new Error('Failed to fetch character');\r\n\r\n    return char.data.results[0];\r\n  };\r\n  getCharInfo = async (id) => {\r\n    const response = await this.getCharacter(id);\r\n    const char = response.data.results;\r\n\r\n    return char.map(this._transformCharacter);\r\n  };\r\n\r\n  getComics = async (offset = 2) => {\r\n    const response = await fetch(\r\n      `https://gateway.marvel.com:443/v1/public/comics?offset=${offset}&apikey=${this.key}`,\r\n    );\r\n    const comics = await response.json();\r\n    return comics.data.results;\r\n  };\r\n\r\n  getComic = async (id) => {\r\n    const data = await fetch(\r\n      `https://gateway.marvel.com:443/v1/public/comics/${id}?apikey=${this.key}`,\r\n    );\r\n\r\n    const response = await data.json();\r\n    const comic = response.data.results;\r\n    return comic.map(this._transformComics)[0];\r\n  };\r\n\r\n  _transformCharacter = (char, slice = true) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: slice\r\n        ? char.description\r\n          ? `${char.description.slice(0, 210)}...`\r\n          : 'There is no description for this character'\r\n        : char.description,\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items.slice(0, 9),\r\n    };\r\n  };\r\n  _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || 'There is no description',\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : 'No information about the number of pages',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      language: comics.textObjects[0]?.language || 'en-us',\r\n      price: comics.prices[0].price\r\n        ? `${comics.prices[0].price}$`\r\n        : 'Not available',\r\n    };\r\n  };\r\n}\r\nexport default Marvel;\r\n"],"names":["ListLoader","_jsx","className","children","_jsxs","ComicsHeader","_Fragment","style","height","src","hulk","alt","marvelSquad","_ref","id","thumbnail","title","price","Link","to","concat","marvel","Marvel","ComicsList","comics","setComics","useState","comicsList","setComicsList","offset","setOffset","isLoading","setIsLoading","useEffect","async","data","getComics","oldData","fetchData","getComicsList","timeoutId","handleScroll","clearTimeout","setTimeout","window","innerHeight","document","documentElement","scrollTop","offsetHeight","addEventListener","removeEventListener","map","item","i","props","_transformComics","ComicsListItem","content","length","motion","section","initial","whileInView","viewport","once","custom","variants","comicsHeaderAnim","div","Loader","ComicsPage","Helmet","name","header","display","flexDirection","constructor","_this","key","_baseOffset","getAllCharacters","response","fetch","this","ok","console","error","json","getCharactersList","results","_transformCharacter","getCharacter","Error","getCharInfoByName","char","getCharInfo","arguments","undefined","getComic","slice","description","path","extension","homepage","urls","url","wiki","items","_comics$textObjects$","pageCount","language","textObjects","prices"],"sourceRoot":""}