{"version":3,"file":"static/js/323.9a7ff06c.chunk.js","mappings":"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","sources":["components/comicInfo/ComicInfo.js"],"sourcesContent":["import './comicInfo.scss';\r\n\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\n\r\nimport Marvel from '../../services/Marvel';\r\n\r\nimport Loader from '../loader/Loader';\r\nimport Error from '../error/Error';\r\n\r\nconst marvel = new Marvel();\r\n\r\nconst BackArrowSvg = () => {\r\n  return (\r\n    <svg\r\n      fill='#f0141e'\r\n      height='30px'\r\n      width='30px'\r\n      style={{ paddingRight: 10, marginTop: '-5px' }}\r\n      version='1.1'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      viewBox='0 0 26.676 26.676'\r\n    >\r\n      <g id='SVGRepo_bgCarrier' strokeWidth='0'></g>\r\n      <g\r\n        id='SVGRepo_tracerCarrier'\r\n        strokeLinecap='round'\r\n        strokeLinejoin='round'\r\n      ></g>\r\n      <g id='SVGRepo_iconCarrier'>\r\n        <g>\r\n          <path d='M26.105,21.891c-0.229,0-0.439-0.131-0.529-0.346l0,0c-0.066-0.156-1.716-3.857-7.885-4.59 c-1.285-0.156-2.824-0.236-4.693-0.25v4.613c0,0.213-0.115,0.406-0.304,0.508c-0.188,0.098-0.413,0.084-0.588-0.033L0.254,13.815 C0.094,13.708,0,13.528,0,13.339c0-0.191,0.094-0.365,0.254-0.477l11.857-7.979c0.175-0.121,0.398-0.129,0.588-0.029 c0.19,0.102,0.303,0.295,0.303,0.502v4.293c2.578,0.336,13.674,2.33,13.674,11.674c0,0.271-0.191,0.508-0.459,0.562 C26.18,21.891,26.141,21.891,26.105,21.891z'></path>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst ComicInfoContent = ({ comic }) => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      <div className='comic-info__image'>\r\n        <img className='comic-info__img' src={comic.thumbnail} alt='' />\r\n      </div>\r\n      <div className='comic-info__content'>\r\n        <h2 className='comic-info__title'>{comic.title}</h2>\r\n        <h4 className='comic-info__description'>{comic.description}</h4>\r\n        <h6 className='comic-info__pages'>{comic.pageCount}</h6>\r\n        <h6 className='comic-info__language'>Language: {comic.language}</h6>\r\n        <h3 className='comic-info__price'>{comic.price}</h3>\r\n      </div>\r\n      <Link className='comic-info__back' onClick={() => navigate(-1)}>\r\n        <BackArrowSvg />\r\n        Back to all\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\nconst ComicInfo = () => {\r\n  const [comic, setComic] = useState(null);\r\n  const [doesntExist, setDoesntExist] = useState(false);\r\n  const [loading, isLoading] = useState(false);\r\n  const comicInfoBlock = useRef();\r\n  const { comicId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const getComic = async () => {\r\n      try {\r\n        isLoading(true);\r\n        const newComic = await marvel.getComic(comicId);\r\n        setComic(newComic);\r\n        setDoesntExist(false);\r\n      } catch (error) {\r\n        setDoesntExist(true);\r\n        console.error('Error fetching character information:', error);\r\n      } finally {\r\n        isLoading(false);\r\n      }\r\n    };\r\n\r\n    getComic();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const error = !loading && doesntExist ? <Error /> : null;\r\n  const loader = loading && <Loader />;\r\n  const content = !loading && comic ? <ComicInfoContent comic={comic} /> : null;\r\n  if (content)\r\n    comicInfoBlock.current.style.backgroundColor = 'rgba(255, 0, 0, 0.2)';\r\n\r\n  return (\r\n    <section className='comic-info'>\r\n      <div className='container comic-info-container'>\r\n        <div ref={comicInfoBlock} className='comic-info__block'>\r\n          {content}\r\n          {error}\r\n          {loader}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ComicInfo;\r\n"],"names":["marvel","Marvel","BackArrowSvg","_jsxs","fill","height","width","style","paddingRight","marginTop","version","xmlns","viewBox","children","_jsx","id","strokeWidth","strokeLinecap","strokeLinejoin","d","ComicInfoContent","_ref","comic","navigate","useNavigate","_Fragment","className","src","thumbnail","alt","title","description","pageCount","language","price","Link","onClick","ComicInfo","setComic","useState","doesntExist","setDoesntExist","loading","isLoading","comicInfoBlock","useRef","comicId","useParams","useEffect","async","newComic","getComic","error","console","Error","loader","Loader","content","current","backgroundColor","ref"],"sourceRoot":""}