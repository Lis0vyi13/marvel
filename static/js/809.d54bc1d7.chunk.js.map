{"version":3,"file":"static/js/809.d54bc1d7.chunk.js","mappings":"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","sources":["components/singlePageInfo/SinglePageInfo.js"],"sourcesContent":["import './singlePageInfo.scss';\r\n\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport Loader from '../loader/Loader';\r\nimport Error from '../error/Error';\r\nimport { cardAnim } from '../../animations/anim';\r\nimport Marvel from '../../services/Marvel';\r\n\r\nconst marvel = new Marvel();\r\n\r\nconst BackArrowSvg = () => {\r\n  return (\r\n    <svg\r\n      fill='#f0141e'\r\n      height='30px'\r\n      width='30px'\r\n      style={{ paddingRight: 10, marginTop: '-5px' }}\r\n      version='1.1'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      viewBox='0 0 26.676 26.676'\r\n    >\r\n      <g id='SVGRepo_bgCarrier' strokeWidth='0'></g>\r\n      <g\r\n        id='SVGRepo_tracerCarrier'\r\n        strokeLinecap='round'\r\n        strokeLinejoin='round'\r\n      ></g>\r\n      <g id='SVGRepo_iconCarrier'>\r\n        <g>\r\n          <path d='M26.105,21.891c-0.229,0-0.439-0.131-0.529-0.346l0,0c-0.066-0.156-1.716-3.857-7.885-4.59 c-1.285-0.156-2.824-0.236-4.693-0.25v4.613c0,0.213-0.115,0.406-0.304,0.508c-0.188,0.098-0.413,0.084-0.588-0.033L0.254,13.815 C0.094,13.708,0,13.528,0,13.339c0-0.191,0.094-0.365,0.254-0.477l11.857-7.979c0.175-0.121,0.398-0.129,0.588-0.029 c0.19,0.102,0.303,0.295,0.303,0.502v4.293c2.578,0.336,13.674,2.33,13.674,11.674c0,0.271-0.191,0.508-0.459,0.562 C26.18,21.891,26.141,21.891,26.105,21.891z'></path>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n          <g></g>\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst SinglePageInfoContent = ({ data, type }) => {\r\n  const navigate = useNavigate();\r\n  let content = null;\r\n  switch (type) {\r\n    case 'comics':\r\n      content = (\r\n        <>\r\n          <Helmet>\r\n            <title>{data.title}</title>\r\n            <meta name='description' content={`${data.title} page`} />\r\n          </Helmet>\r\n          <div className='single-page__image'>\r\n            <img\r\n              className='single-page__img'\r\n              src={data.thumbnail}\r\n              alt={data.title}\r\n            />\r\n          </div>\r\n          <div className='single-page__content'>\r\n            <h2 className='single-page__title'>{data.title}</h2>\r\n            <h4 className='single-page__description'>{data.description}</h4>\r\n            <h6 className='single-page__pages'>{data.pageCount}</h6>\r\n            <h6 className='single-page__language'>Language: {data.language}</h6>\r\n            <h3 className='single-page__price'>{data.price}</h3>\r\n          </div>\r\n        </>\r\n      );\r\n      break;\r\n    case 'char':\r\n      content = (\r\n        <>\r\n          <Helmet>\r\n            <title>{data[0].name}</title>\r\n            <meta name='description' content={`${data[0].name} page`} />\r\n          </Helmet>\r\n          <div className='single-page__image'>\r\n            <img\r\n              className='single-page__img'\r\n              src={data[0].thumbnail}\r\n              alt={data[0].name}\r\n            />\r\n          </div>\r\n          <div className='single-page__content'>\r\n            <h2 className='single-page__title'>{data[0].name}</h2>\r\n            <h4 className='single-page__description'>{data[0].description}</h4>\r\n          </div>\r\n        </>\r\n      );\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <>\r\n      <Link className='single-page__back' onClick={() => navigate(-1)}>\r\n        <BackArrowSvg />\r\n        Back to all\r\n      </Link>\r\n      {content}\r\n    </>\r\n  );\r\n};\r\nconst SinglePageInfo = ({ type }) => {\r\n  const [data, setData] = useState(null);\r\n  const [doesntExist, setDoesntExist] = useState(false);\r\n  const [loading, isLoading] = useState(false);\r\n  const infoBlock = useRef();\r\n  const { comicId, charId } = useParams();\r\n  const id = comicId || charId;\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        isLoading(true);\r\n\r\n        const info =\r\n          type === 'comics'\r\n            ? await marvel.getComic(id)\r\n            : await marvel.getCharInfo(id, false);\r\n        setData(info);\r\n        setDoesntExist(false);\r\n      } catch (error) {\r\n        setDoesntExist(true);\r\n        console.error('Error fetching character information:', error);\r\n      } finally {\r\n        isLoading(false);\r\n      }\r\n    };\r\n\r\n    getData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const error = !loading && doesntExist ? <Error /> : null;\r\n  const loader = loading && <Loader />;\r\n  const content =\r\n    !loading && data ? <SinglePageInfoContent data={data} type={type} /> : null;\r\n  if (content) infoBlock.current.style.backgroundColor = 'rgba(255, 0, 0, 0.2)';\r\n\r\n  return (\r\n    <motion.section\r\n      initial='hidden'\r\n      whileInView='visible'\r\n      viewport={{ once: true }}\r\n      variants={cardAnim}\r\n      custom={2}\r\n      className='single-page'\r\n    >\r\n      <div className='container single-page-container'>\r\n        <div ref={infoBlock} className='single-page__block'>\r\n          {content}\r\n          {error}\r\n          {loader}\r\n        </div>\r\n      </div>\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default SinglePageInfo;\r\n"],"names":["marvel","Marvel","BackArrowSvg","_jsxs","fill","height","width","style","paddingRight","marginTop","version","xmlns","viewBox","children","_jsx","id","strokeWidth","strokeLinecap","strokeLinejoin","d","SinglePageInfoContent","_ref","data","type","navigate","useNavigate","content","_Fragment","Helmet","title","name","concat","className","src","thumbnail","alt","description","pageCount","language","price","Link","onClick","_ref2","setData","useState","doesntExist","setDoesntExist","loading","isLoading","infoBlock","useRef","comicId","charId","useParams","useEffect","async","info","getComic","getCharInfo","error","console","getData","Error","loader","Loader","current","backgroundColor","motion","section","initial","whileInView","viewport","once","variants","cardAnim","custom","ref"],"sourceRoot":""}