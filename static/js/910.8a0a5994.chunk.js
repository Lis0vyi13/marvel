"use strict";(self.webpackChunkmarvel=self.webpackChunkmarvel||[]).push([[910],{9834:(e,t,s)=>{s.d(t,{Z:()=>i});var a=s(184);const i=()=>(0,a.jsx)("div",{className:"loadingio-spinner-ellipsis-6iszfz84awk list-loader",children:(0,a.jsxs)("div",{className:"ldio-xlbd2dzlxer",children:[(0,a.jsx)("div",{}),(0,a.jsx)("div",{}),(0,a.jsx)("div",{}),(0,a.jsx)("div",{}),(0,a.jsx)("div",{})]})})},3214:(e,t,s)=>{s.r(t),s.d(t,{default:()=>g});var a=s(5763),i=s(4270);const c=s.p+"static/media/comics-hulk.68bb4cb92fca5bb1c878.png",n=s.p+"static/media/marvel-squad.ee2bad89abcc27e7685f.png";var r=s(184);const o=()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("img",{style:{height:130},src:c,alt:"hulk"}),(0,r.jsx)("img",{src:n,alt:"marvel squad"}),(0,r.jsx)("h2",{className:"comics-header__title",children:"New comics every week! Stay tuned!"})]});var l=s(2791),h=s(1087);const m=e=>{let{id:t,thumbnail:s,title:a,price:i}=e;return(0,r.jsx)(h.rU,{to:"./".concat(t),children:(0,r.jsxs)("div",{className:"comics-item",children:[(0,r.jsx)("img",{className:"comic-img",src:s,alt:"sef"}),(0,r.jsx)("h2",{className:"comic-title",children:a}),(0,r.jsx)("h4",{className:"comic-price",children:i})]})})};var d=s(5647),u=s(9834),p=s(2908),f=s(6916);const v=new d.Z,w=()=>{const[e,t]=(0,l.useState)([]),[s,i]=(0,l.useState)([]),[c,n]=(0,l.useState)(2),[o,h]=(0,l.useState)(!0);(0,l.useEffect)((()=>{(async()=>{const e=await v.getComics(c);t((t=>[...t,...e])),h(!1)})()}),[c]),(0,l.useEffect)((()=>{const e=d();i(e)}),[e]),(0,l.useEffect)((()=>{let e;const t=()=>{clearTimeout(e),e=setTimeout((()=>{window.innerHeight+document.documentElement.scrollTop>=document.documentElement.offsetHeight-50&&n((e=>e+20))}),20)};return window.addEventListener("scroll",t),()=>{window.removeEventListener("scroll",t)}}),[]);const d=()=>e.map(((e,t)=>{const s=v._transformComics(e);return(0,r.jsx)(m,{...s},t)})),w=e.length>0?(0,r.jsxs)(a.E.section,{initial:"hidden",whileInView:"visible",viewport:{once:!0},custom:.5,variants:p.oO,className:"comics-list__content",children:[s,(0,r.jsx)(u.Z,{})]}):(0,r.jsx)("p",{children:"No comics found."});return(0,r.jsx)(a.E.div,{initial:"hidden",whileInView:"visible",viewport:{once:!0},custom:2,variants:p.oO,className:"comics-list",children:o?(0,r.jsx)(f.Z,{}):w})},g=()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(i.q,{children:[(0,r.jsx)("title",{children:"Comics"}),(0,r.jsx)("meta",{name:"description",content:"Comics Page"})]}),(0,r.jsx)("section",{className:"comics",children:(0,r.jsxs)("div",{className:"container comics-container",children:[(0,r.jsx)(a.E.header,{initial:"hidden",whileInView:"visible",viewport:{once:!0},variants:p.oO,custom:2,className:"comics-header",children:(0,r.jsx)(o,{})}),(0,r.jsx)("main",{style:{display:"flex",flexDirection:"column"},className:"comics-main",children:(0,r.jsx)(w,{})})]})})]})},5647:(e,t,s)=>{s.d(t,{Z:()=>a});const a=class{constructor(){var e=this;this.key="333d74a765f835dd4bccc16126e65eaa",this._baseOffset=1253,this.getAllCharacters=async e=>{const t=await fetch("https://gateway.marvel.com:443/v1/public/characters?limit=9&offset=".concat(e,"&apikey=").concat(this.key));return t.ok||console.error("Fetch error"),await t.json()},this.getCharactersList=async e=>(await this.getAllCharacters(e)).data.results.map(this._transformCharacter),this.getCharacter=async e=>{const t=await fetch("https://gateway.marvel.com:443/v1/public/characters/".concat(e,"?apikey=").concat(this.key));if(!t.ok)throw new Error("Failed to fetch character");return await t.json()},this.getCharInfoByName=async e=>{const t=await fetch("https://gateway.marvel.com:443/v1/public/characters?name=".concat(e,"&apikey=").concat(this.key));if(!t.ok)throw new Error("Failed to fetch character");const s=await t.json();if(0===s.data.results.length)throw new Error("Failed to fetch character");return s.data.results[0]},this.getCharInfo=async e=>(await this.getCharacter(e)).data.results.map(this._transformCharacter),this.getComics=async function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:2;const s=await fetch("https://gateway.marvel.com:443/v1/public/comics?offset=".concat(t,"&apikey=").concat(e.key));return(await s.json()).data.results},this.getComic=async e=>{const t=await fetch("https://gateway.marvel.com:443/v1/public/comics/".concat(e,"?apikey=").concat(this.key));return(await t.json()).data.results.map(this._transformComics)[0]},this._transformCharacter=function(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return{id:e.id,name:e.name,description:t?e.description?"".concat(e.description.slice(0,210),"..."):"There is no description for this character":e.description,thumbnail:e.thumbnail.path+"."+e.thumbnail.extension,homepage:e.urls[0].url,wiki:e.urls[1].url,comics:e.comics.items.slice(0,9)}},this._transformComics=e=>{var t;return{id:e.id,title:e.title,description:e.description||"There is no description",pageCount:e.pageCount?"".concat(e.pageCount," p."):"No information about the number of pages",thumbnail:e.thumbnail.path+"."+e.thumbnail.extension,language:(null===(t=e.textObjects[0])||void 0===t?void 0:t.language)||"en-us",price:e.prices[0].price?"".concat(e.prices[0].price,"$"):"Not available"}}}}}}]);
//# sourceMappingURL=910.8a0a5994.chunk.js.map